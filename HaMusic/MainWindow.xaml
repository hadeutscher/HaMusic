<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:this="clr-namespace:HaMusic"
        xmlns:hmwpf="clr-namespace:HaMusic.Wpf"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:ff="clr-namespace:FunctionalFun.UI.Behaviours"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="HaMusic.MainWindow"
        Title="HaMusic" Height="350" Width="525" Closing="RibbonWindow_Closing"
        WindowState="Maximized" Icon="HaLogo.ico" Loaded="RibbonWindow_Loaded">
    <Window.Resources>
        <hmwpf:EnumConverter x:Key="EnumConverter" />
        <hmwpf:BindingConverter x:Key="BindingConverter" />
        <hmwpf:SeekTimeConverter x:Key="SeekTimeConverter" />
        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
        <hmwpf:VisibilityBindingConverter x:Key="MultiBindingToVisibilityConverter" Converter1="{StaticResource BindingConverter}" Converter2="{StaticResource VisibilityConverter}" />
        <Style TargetType="Slider">
            <Setter Property="Focusable" Value="False" />
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}" />
        <KeyBinding Key="N" Modifiers="Control" Command="{Binding ConnectCommand}" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="1*" x:Name="browserColumn" />
            </Grid.ColumnDefinitions>
            <TabControl x:Name="playlistTabs" Focusable="False" Grid.Column="0"
                        IsEnabled="{Binding Enabled}"
                        ItemsSource="{Binding ServerDataSource.Playlists}"
                        SelectedItem="{Binding SelectedPlaylist}">
                <TabControl.ItemContainerStyle>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <this:EditableLabel x:Name="editableLabel" HorizontalAlignment="Stretch" 
                                            Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            TextChanged="TextBox_TextChanged"
                                            dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DataContext.TabHeaderDropHandler, ElementName=playlistTabs}">
                            <this:EditableLabel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="New" Click="MenuItem_NewPlaylist" />
                                    <MenuItem Header="Rename" Click="MenuItem_RenamePlaylist" />
                                    <MenuItem Header="Clear" Click="MenuItem_ClearPlaylist" />
                                    <MenuItem Header="Delete" Click="MenuItem_DeletePlaylist" />
                                    <Separator />
                                    <MenuItem Header="Import" Click="MenuItem_ImportPlaylist" />
                                    <MenuItem Header="Export" Click="MenuItem_ExportPlaylist" />
                                </ContextMenu>
                            </this:EditableLabel.ContextMenu>
                        </this:EditableLabel>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <this:FocusableListView x:Name="items" 
                                                ItemsSource="{Binding PlaylistItems}"
                                                ff:MultiSelectorBehaviours.SynchronizedSelectedItems="{Binding DataContext.SelectedPlaylistItems, ElementName=playlistTabs}"
                                                SelectedItem="{Binding DataContext.SelectedPlaylistItem, Mode=OneWayToSource, ElementName=playlistTabs}"
                                                FocusedItem="{Binding DataContext.FocusedItem, ElementName=playlistTabs}"
                                                MouseDoubleClick="items_MouseDoubleClick" KeyDown="items_KeyDown"
                                                HorizontalContentAlignment="Stretch"
                                                dd:DragDrop.IsDragSource="True" dd:DragDrop.DragHandler="{Binding DataContext.PlaylistDragHandler, ElementName=playlistTabs}"
                                                dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding DataContext.PlaylistDropHandler, ElementName=playlistTabs}">
                            <this:FocusableListView.ItemTemplate>
                                <DataTemplate>
                                    <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                                        <Image Source="/HaMusic;component/Images/next_target.png" Height="{Binding Path=FontSize,ElementName=txtBlock}" DockPanel.Dock="Left">
                                            <Image.Visibility>
                                                <MultiBinding Converter="{StaticResource MultiBindingToVisibilityConverter}">
                                                    <Binding Path="DataContext.ServerDataSource.NextItemOverride.UID" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabControl}" UpdateSourceTrigger="PropertyChanged" />
                                                    <Binding Path="UID" />
                                                </MultiBinding>
                                            </Image.Visibility>
                                        </Image>
                                        <TextBlock x:Name="txtBlock" HorizontalAlignment="Stretch" Text="{Binding Item}" Width="Auto">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Style.Triggers>
                                                        <DataTrigger Value="True">
                                                            <DataTrigger.Binding>
                                                                <MultiBinding Converter="{StaticResource BindingConverter}">
                                                                    <Binding Path="DataContext.ServerDataSource.CurrentItem.UID" RelativeSource="{RelativeSource FindAncestor, AncestorType=TabControl}" UpdateSourceTrigger="PropertyChanged" />
                                                                    <Binding Path="UID" />
                                                                </MultiBinding>
                                                            </DataTrigger.Binding>
                                                            <Setter Property="Background">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="1,0.5" MappingMode="RelativeToBoundingBox" StartPoint="0,0.5">
                                                                        <GradientStop Offset="-2" Color="#4095FF" />
                                                                        <GradientStop Offset="-1" Color="White" />
                                                                        <GradientStop Offset="0" Color="#4095FF" />
                                                                        <GradientStop Offset="1" Color="White" />
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <DataTrigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[0].(GradientStop.Offset)"
                                                                        From="-2" To="0" Duration="0:0:4" RepeatBehavior="Forever" />
                                                                        <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                                                        From="-1" To="1" Duration="0:0:4" RepeatBehavior="Forever" />
                                                                        <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                                                        From="0" To="2" Duration="0:0:4" RepeatBehavior="Forever" />
                                                                        <DoubleAnimation Storyboard.TargetProperty="Background.(GradientBrush.GradientStops)[3].(GradientStop.Offset)"
                                                                        From="1" To="3" Duration="0:0:4" RepeatBehavior="Forever" />
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                            <TextBlock.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="Play Next" Click="MenuItem_PlayItemNext" />
                                                    <MenuItem Header="Delete" Click="MenuItem_DeleteItem" />
                                                </ContextMenu>
                                            </TextBlock.ContextMenu>
                                        </TextBlock>
                                    </DockPanel>
                                </DataTemplate>
                            </this:FocusableListView.ItemTemplate>
                        </this:FocusableListView>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />
            <this:MediaBrowser x:Name="mediaBrowser" Grid.Column="2" ItemDoubleClicked="mediaBrowser_ItemDoubleClicked" IsEnabled="{Binding Enabled}" />
        </Grid>
        <Slider x:Name="songSlider" Grid.Row="2" HorizontalAlignment="Stretch" SmallChange="1" LargeChange="10"  Margin="10,5,10,0"
                IsEnabled="{Binding Enabled}"
                Value="{Binding ServerDataSource.Position}"
                Maximum="{Binding ServerDataSource.Maximum}"
                ValueChanged="songSlider_ValueChanged" />
        <Grid Grid.Row="3" HorizontalAlignment="Stretch">
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Height" Value="40" />
                    <Setter Property="Width" Value="40" />
                    <Setter Property="Margin" Value="2,5,2,10" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding ConnectCommand}" Margin="5,5,2,10">
                    <StackPanel>
                        <Image Source="/HaMusic;component/Images/connect.png" />
                    </StackPanel>
                </Button>
                <ListView Grid.Column="1" x:Name="moveType" VerticalAlignment="Center"
                          IsEnabled="{Binding Enabled}"
                          SelectedValue="{Binding SelectedMove}"
                          ItemsSource="{Binding MoveTypes}"
                          SelectionChanged="moveType_SelectionChanged">
                    <ListView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DodgerBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DodgerBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White" />
                    </ListView.Resources>
                </ListView>
                <Label Grid.Column="3" VerticalAlignment="Center" Margin="10,0,10,5">
                    <MultiBinding Converter="{StaticResource SeekTimeConverter}">
                        <Binding Path="ServerDataSource.Position" UpdateSourceTrigger="PropertyChanged" />
                        <Binding Path="ServerDataSource.Maximum" UpdateSourceTrigger="PropertyChanged" />
                    </MultiBinding>
                </Label>
                <Button Grid.Column="4" x:Name="stopBtn" Command="{Binding StopCommand}">
                    <StackPanel>
                        <Image Source="/HaMusic;component/Images/stop.png" />
                    </StackPanel>
                </Button>
            </Grid>
            <Button Grid.Column="1" x:Name="ppBtn" Command="{Binding PlayPauseCommand}" Height="53" Width="53">
                <StackPanel>
                    <Image Source="{Binding PlayPauseImage}" />
                </StackPanel>
            </Button>
            <Grid Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="nextBtn" Command="{Binding NextCommand}">
                    <StackPanel>
                        <Image Source="/HaMusic;component/Images/next.png" />
                    </StackPanel>
                </Button>
                <Slider Grid.Column="1" x:Name="volumeSlider" Margin="10,0,10,5" VerticalAlignment="Center" HorizontalAlignment="Left" Maximum="100" Width="100" SmallChange="1" LargeChange="10"
                        IsEnabled="{Binding Enabled}"
                        Value="{Binding ServerDataSource.Volume}"
                        ValueChanged="volumeSlider_ValueChanged" />
                <Button Grid.Column="3" Command="{Binding IndexSettingsCommand}" Margin="2,5,5,10">
                    <StackPanel>
                        <Image Source="/HaMusic;component/Images/add.png" />
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
